// Intermediate representation, autogenerated.
#include "runtime.h"
semaphore sbt_start_sem = 0ULL;
semaphore sbt_s1 = 0ULL;
semaphore sbt_s2 = 0ULL;
semaphore sbt_overwrite = 0ULL;
semaphore sbt_overwrite_done = 0ULL;
semaphore sbt_done_sem = 0ULL;
int32 sbt_no_opt = 0ULL;
int32 sbt_no_opt2 = 0ULL;
int32 sbt_i = 0ULL;
void __attribute__ ((noinline)) sbt_huge() {
{
(sbt_up(sbt_s1));
(sbt_down(sbt_s2));
if ((sbt_no_opt) == (1ULL)) {
{
fixed_array<uint64, 37918ULL> sbt_reserve;
(sbt_reserve).setitem(sbt_no_opt, (sbt_no_opt));
}
}
fixed_array<uint64, 512ULL> sbt_arr;
(sbt_down(sbt_overwrite));
(sbt_arr).setitem(0ULL, (10416984888683040912ULL));
(sbt_arr).setitem(1ULL, (10416984888683040912ULL));
(sbt_arr).setitem(2ULL, (10416984888683040912ULL));
(sbt_arr).setitem(3ULL, (10416984888683053105ULL));
(sbt_arr).setitem(4ULL, (5257443803835484240ULL));
(sbt_arr).setitem(5ULL, (8299904789528063931ULL));
(sbt_arr).setitem(6ULL, (364575723539944296ULL));
(sbt_arr).setitem(7ULL, (14757395258967641292ULL));
sbt_i = (256ULL);
while ((sbt_i) < (512ULL)) {
{
(sbt_arr).setitem(sbt_i, (3819ULL));
sbt_i = ((sbt_i) + (1ULL));
}
}
(sbt_up(sbt_overwrite_done));
}
}
void __attribute__ ((noinline)) sbt_deep(int32 sbt_iter) {
{
if ((sbt_no_opt) == (1ULL)) {
{
fixed_array<uint64, 512ULL> sbt_reserve;
(sbt_reserve).setitem(sbt_no_opt, (sbt_no_opt));
}
}
if ((sbt_iter) == (8ULL)) {
{
(sbt_up(sbt_overwrite));
(sbt_down(sbt_overwrite_done));
}
}
if ((sbt_iter) < (8ULL)) {
{
(sbt_deep((sbt_iter) + (1ULL)));
}
}
}
}
void __attribute__ ((noinline)) sbt_f1() {
{
(sbt_up(sbt_start_sem));
(sbt_down(sbt_s1));
sbt_no_opt = (2ULL);
(sbt_up(sbt_s2));
(sbt_deep(0ULL));
(sbt_down(sbt_done_sem));
}
}
void __attribute__ ((noinline)) sbt_f2() {
{
(sbt_down(sbt_start_sem));
(sbt_huge());
(sbt_print(make_string("Finished running huge")));
(sbt_up(sbt_done_sem));
}
}
int32 __attribute__ ((noinline)) sbt_main() {
{
(sbt_usleep((1000ULL) * (1000ULL)));
thread sbt_t2 = (sbt_make_thread(sbt_f2));
thread sbt_t1 = (sbt_make_thread(sbt_f1));
(sbt_join(sbt_t1));
(sbt_join(sbt_t2));
return (0ULL);
}
}

int main() {
  std::cout << std::unitbuf; 
  std::cerr << std::unitbuf; 
  setvbuf(stdout, NULL, _IONBF, 0);
  setvbuf(stderr, NULL, _IONBF, 0);
  _exit(sbt_main());
}
